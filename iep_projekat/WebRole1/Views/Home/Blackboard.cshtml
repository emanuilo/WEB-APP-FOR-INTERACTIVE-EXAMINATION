@model IEnumerable<WebRole1.Models.Klon>

@{
    ViewBag.Title = "Blackboard";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Blackboard</h2>
<br />

<div class="row" id="boxes">
    @foreach (var item in Model)
    {
        <div class="col-md-4" style="padding: 0px">
            <div class="box" id="pit @item.IdKlo">
                <h4>@item.Naslov</h4>
                <br />
                <p>
                    @item.Tekst
                </p>
                <div class="ponudjeni">
                    <ol>
                        @for (int i = 0; i < Convert.ToInt32(ViewBag.K); i++)
                        {
                            <li>
                                @item.KlonPonudjeniOdgs.Where(p => p.RedniBr == i).FirstOrDefault().Sadrzaj
                            </li>
                        }
                    </ol>
                </div>
            </div>
        </div>
    }
</div>
<input id="IdKor" name="IdKor" type="hidden" value=@ViewBag.UserId />

<style media="screen" type="text/css">
    .box p {
        word-wrap: break-word;
    }
    .box h4 {
        text-align: center
    }
    .box {
        padding-top: 10px;
        padding-left: 15px;
        padding-right: 15px;
        border: 3px solid lightgrey;
        border-radius: 15px;
        height: 300px;
        margin: 2px;
        cursor: pointer;
    }
    .ponudjeni {
        padding-top: 25px;
        /*padding-left: 40px;
        padding-right: 30px;*/
        font-size: 12px;
        word-wrap: break-word;
    }

</style>
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var push = $.connection.pushHub;
            // Create a function that the hub can call back to display messages.
            //$.connection.hub.qs = {"UserEmail" : }
            $.connection.hub.start().done(function () {
                push.server.joinGroup($('#IdKor').val());
            });
            //$.connection.hub.start();
            push.client.addNewQuestion = function (naslov, tekst, ponudjeni, idPit) {
                // Add the message to the page.
                ponudjeni = ponudjeni.substring(0, ponudjeni.length - 1);
                var odgovori = ponudjeni.split(";");
                var htmlOdgovori = "";
                for (var i in odgovori) {
                    htmlOdgovori += "<li> " + odgovori[i] + "</li>";
                }
                $('#boxes').prepend('<div class="col-md-4" style="padding: 0px"> <div class="box" id="pit "' + idPit + '"> <h4>' + htmlEncode(naslov) + '</h4> <br/> <p>' + htmlEncode(tekst) + '</p><div class="ponudjeni" ><ol>' + htmlOdgovori + '</ol></div></div></div>');
                
            };

        });

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        $('[id^="dugme"').click(function () {
            // Call the Send method on the hub.
            //setTimeout(function () {
            //    push.server.send($('#IdKan').val());
            //}, 200);
            //push.server.send($('#IdKan').val());

        });
    </script>
}